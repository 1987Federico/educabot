// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "github.com/fede/golang_api/internal/domain/entity"
import mock "github.com/stretchr/testify/mock"

// TripService is an autogenerated mock type for the TripService type
type TripService struct {
	mock.Mock
}

// AssignTripToDriver provides a mock function with given fields: driverID
func (_m *TripService) AssignTripToDriver(driverID uint64) *entity.Trip {
	ret := _m.Called(driverID)

	var r0 *entity.Trip
	if rf, ok := ret.Get(0).(func(uint64) *entity.Trip); ok {
		r0 = rf(driverID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Trip)
		}
	}

	return r0
}

// CloseTrip provides a mock function with given fields: driverID
func (_m *TripService) CloseTrip(driverID uint64) {
	_m.Called(driverID)
}

// IsTripOpen provides a mock function with given fields: driverID, finished, toTrip
func (_m *TripService) IsTripOpen(driverID uint64, finished bool, toTrip string) *entity.Trip {
	ret := _m.Called(driverID, finished, toTrip)

	var r0 *entity.Trip
	if rf, ok := ret.Get(0).(func(uint64, bool, string) *entity.Trip); ok {
		r0 = rf(driverID, finished, toTrip)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Trip)
		}
	}

	return r0
}
